public List<Account> getAccounts(List<Account> accounts) {
    if(accounts == null) return accounts;
    
    AccountComparator accountComparator = new AccountComparator();
    accounts.sort();
    return accounts;
}
public class AccountComparator implements Comparator<Account> {
    public Integer compare(Account o1, Account o2) {
        // The return value of 0 indicates that both elements are equal.
        Integer returnValue = 0;
        
        if(o1 == null && o2 == null) {
            returnValue = 0;
        } else if(o1 == null) {
            // nulls-first implementation
            returnValue = -1; 
        } else if(o2 == null) {
            // nulls-first implementation
            returnValue = 1;
        } else if ((o1.AnnualRevenue == null) && (o2.AnnualRevenue == null)) {
            // both have null AnnualRevenue
            returnValue = 0;
        } else if (o1.AnnualRevenue == null){
            // nulls-first implementation
            returnValue = -1;
        } else if (o2.AnnualRevenue == null){
            // nulls-first implementation
            returnValue = 1;
        } else if (o1.AnnualRevenue > o2.AnnualRevenue) {
            // Set return value to a negative value.
            returnValue = -1;
        } else if (o1.AnnualRevenue < o2.AnnualRevenue) {
            // Set return value to a positive value.
            returnValue = 1;
        }
        return returnValue;
    }
}
